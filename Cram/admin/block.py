from pyrogram import Client, filters
from pyrogram.types import Message
from Config import app, BLACK_LIST, DEFAULT_ADMIN , ADMINS , GROUP_ID
from ..data import BlackDB
from .helpers import extract_user


@app.on_message(filters.command("block"))
async def block_user(client: Client, message: Message):
    user = message.from_user

    if user.id not in ADMINS:
        return await message.reply("__‚ùï Bu komut sadece adminler i√ßin.__")

    if not message.reply_to_message and len(message.command) < 2:
        await message.reply(
            "üîÆ **L√ºtfen bir kullanƒ±cƒ±yƒ± yanƒ±tlayƒ±n veya bir kullanƒ±cƒ± kimliƒüi girin.**"
        )
        return

    try:
        user_id, user_first_name = extract_user(message)
        if user_id is None:
            await message.reply("üîÆ **Kullanƒ±cƒ± bulunamadƒ±!**")
            return
        try:
            banned = await client.get_users(user_id)
        except Exception as e:
            await message.reply(
                "‚ö†Ô∏è **Kullanƒ±cƒ± bulunamadƒ±, l√ºtfen mesajƒ±nƒ± yanƒ±tlayƒ±n veya kullanƒ±cƒ± adƒ± girerek deneyin.**"
            )
            return
    except Exception as e:
        await message.reply(
            "‚ö†Ô∏è **Kullanƒ±cƒ± bulunamadƒ±, l√ºtfen mesajƒ±nƒ± yanƒ±tlayƒ±n veya kullanƒ±cƒ± adƒ± girerek deneyin.**"
        )
        return

    if banned.id in BLACK_LIST:
        return await message.reply("__‚ùï Bu kullanƒ±cƒ± zaten engellenmi≈ü.__")
    else:
        BLACK_LIST.append(banned.id)
        await message.reply(f"‚úÖ {banned.mention} __ba≈üarƒ±yla engellendi.__")
        await BlackDB.blackupdate()
        await client.send_message(
            GROUP_ID,
            f"#YASAKLANDI\n\n‚Ñπ **{banned.mention}**(`{banned.id}`) **adlƒ± kullanƒ±cƒ± {user.mention} tarafƒ±ndan yasaklandƒ±.**",
        )
        return


@app.on_message(filters.command("unblock"))
async def unblock_user(client: Client, message: Message):
    user = message.from_user

    if user.id not in ADMINS:
        return await message.reply("__‚ùï Bu komut sadece adminler i√ßin.__")

    if not message.reply_to_message and len(message.command) < 2:
        await message.reply(
            "üîÆ **L√ºtfen bir kullanƒ±cƒ±yƒ± yanƒ±tlayƒ±n veya bir kullanƒ±cƒ± kimliƒüi girin.**"
        )
        return

    try:
        user_id, user_first_name = extract_user(message)
        if user_id is None:
            await message.reply("üîÆ **Kullanƒ±cƒ± bulunamadƒ±!**")
            return
        try:
            banned = await client.get_users(user_id)
        except Exception as e:
            await message.reply(
                "‚ö†Ô∏è **Kullanƒ±cƒ± bulunamadƒ±, l√ºtfen mesajƒ±nƒ± yanƒ±tlayƒ±n veya kullanƒ±cƒ± adƒ± girerek deneyin.**"
            )
            return
    except Exception as e:
        await message.reply(
            "‚ö†Ô∏è **Kullanƒ±cƒ± bulunamadƒ±, l√ºtfen mesajƒ±nƒ± yanƒ±tlayƒ±n veya kullanƒ±cƒ± adƒ± girerek deneyin.**"
        )
        return

    if banned.id not in BLACK_LIST:
        return await message.reply("__‚ùï Bu kullanƒ±cƒ± zaten engellenmemi≈ü.__")
    else:
        BLACK_LIST.remove(banned.id)
        await message.reply(f"‚úÖ {banned.mention} __ba≈üarƒ±yla engeli kaldƒ±rƒ±ldƒ±.__")
        await BlackDB.blackupdate()
        await client.send_message(
            GROUP_ID,
            f"#YASAK_KALDIRILDI\n\n‚Ñπ **{banned.mention} adlƒ± kullanƒ±cƒ±nƒ±n yasaƒüƒ± {user.mention} tarafƒ±ndan kaldƒ±rƒ±ldƒ±.**",
        )
        return


@app.on_message(filters.command("blocklist"))
async def block_list(client: Client, message: Message):
    user = message.from_user

    if user.id not in ADMINS:
        return await message.reply("__‚ùï Bu komut sadece adminler i√ßin.__")

    if len(BLACK_LIST) == 0:
        return await message.reply("__‚ùï Engellenmi≈ü kullanƒ±cƒ± yok.__")

    text = "üÖ± **Engellenmi≈ü Kullanƒ±cƒ±lar:**\n\n"
    for user_id in BLACK_LIST:
        try:
            user = await client.get_users(user_id)
        except Exception:
            user = None
            continue
        if user is None:
            text += f"‚Ä¢ Bilinmeyen:`{user_id}`\n"
        else:
            text += f"‚Ä¢ {user.mention}:`{user_id}`\n"

    await message.reply(text)
    return
